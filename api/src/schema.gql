# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

input AllocateFundsInput {
  amount: Float!
  investmentId: String!
  riskProfile: String!
}

type CashFlow {
  amount: Float!
  category: String!
  createdAt: Timestamp!
  date: Timestamp!
  id: Int!
  note: String
  property: Property!
  propertyId: Int!
  type: String!
  updatedAt: Timestamp!
}

input CreatePropertyInput {
  address: String!
  amenities: [String!]!
  bathrooms: Float!
  bedrooms: Int!
  city: String!
  image: String!
  lastRenovated: Int
  monthlyRent: Float!
  occupancyRate: Float!
  propertyType: String!
  roi: Float!
  sqft: Int!
  state: String!
  status: String!
  yearBuilt: Int!
  zipCode: String!
}

input CreateTicketInput {
  description: String!
  priority: String!
  propertyId: Int!
  status: String!
  title: String!
}

type DashboardStats {
  leaseStats: LeaseStats!
  monthlyIncome: MonthlyIncomeStats!
  ticketStats: TicketStats!
  totalProperties: Int!
}

type DeleteTicketResponse {
  id: Int!
  success: Boolean!
}

type HistoricalReturn {
  date: String!
  value: Float!
}

type InvestmentOption {
  description: String!
  expectedReturn: String!
  id: String!
  minimumInvestment: String!
  name: String!
  risk: String!
  type: String!
}

type InvestmentResult {
  investmentId: String
  message: String!
  success: Boolean!
  transactionId: String
}

type Lease {
  createdAt: Timestamp!
  endDate: Timestamp!
  id: Int!
  isActive: Boolean!
  monthlyRent: Float!
  property: Property!
  propertyId: Int!
  startDate: Timestamp!
  tenantEmail: String
  tenantName: String!
  tenantPhone: String
  updatedAt: Timestamp!
}

type LeaseStats {
  totalCount: Int!
  upcomingRenewals: [UpcomingRenewal!]!
}

type MonthlyIncome {
  expenses: Float!
  income: Float!
  month: String!
  net: Float!
}

type MonthlyIncomeStats {
  currentExpenses: Float!
  currentIncome: Float!
  currentNet: Float!
  monthlyChange: Float!
  monthlyData: [MonthlyIncome!]!
}

type Mutation {
  allocateFunds(input: AllocateFundsInput!): InvestmentResult!
  classifyTicket(description: String!): TicketClassification!
  createProperty(createPropertyInput: CreatePropertyInput!): Property!
  createTicket(input: CreateTicketInput!): Ticket!
  deleteTicket(id: Int!): DeleteTicketResponse!
  removeProperty(id: Int!): Property!
  updateProperty(updatePropertyInput: UpdatePropertyInput!): Property!
  updateTicket(input: UpdateTicketInput!): Ticket!
}

type OpenTicket {
  createdAt: String!
  description: String!
  id: Int!
  priority: String!
  propertyAddress: String!
  propertyId: Int!
  status: String!
  title: String!
}

type PortfolioSummary {
  allocatedReservePercentage: Float!
  cagrProjection: Float!
  euribor3M: Float!
  forecastedYield: Float!
  germanCPI: Float!
  monthlyRentIn: Float!
  threeYearProjection: [YearlyProjection!]!
}

type Property {
  address: String!
  amenities: [String!]
  bathrooms: Float
  bedrooms: Int
  cashFlows: [CashFlow!]
  city: String!
  createdAt: Timestamp!
  id: Int!
  image: String
  lastRenovated: Int
  leases: [Lease!]
  monthlyRent: Float!
  occupancyRate: Float
  propertyType: String!
  roi: Float
  sqft: Int
  state: String!
  status: String!
  tickets: [Ticket!]
  updatedAt: Timestamp!
  yearBuilt: Int
  zipCode: String!
}

type Query {
  dashboardStats: DashboardStats!
  historicalReturns: [HistoricalReturn!]!
  investmentOptions(riskProfile: String!, surplusCash: Float!): [InvestmentOption!]!
  portfolioSummary: PortfolioSummary!
  properties: [Property!]!
  property(id: Int!): Property!
  ticket(id: Int!): Ticket!
  tickets(filters: TicketFiltersInput): [Ticket!]!
}

type Subscription {
  ticketCreated: Ticket!
  ticketDeleted: Ticket!
  ticketUpdated: Ticket!
}

type Ticket {
  createdAt: Timestamp!
  description: String!
  id: Int!
  priority: String!
  property: Property!
  propertyAddress: String!
  propertyId: Int!
  status: String!
  title: String!
  updatedAt: Timestamp!
}

type TicketClassification {
  category: String!
  estimatedTimeToFix: String
  priority: String!
  suggestedAction: String
  title: String!
}

input TicketFiltersInput {
  priority: String
  propertyId: Int
  searchQuery: String
  status: String
}

type TicketStats {
  openTickets: [OpenTicket!]!
  totalCount: Int!
}

"""
`Date` type as integer. Type represents date and time as number of milliseconds from start of UNIX epoch.
"""
scalar Timestamp

type UpcomingRenewal {
  endDate: String!
  id: Int!
  isActive: Boolean!
  monthlyRent: Float!
  propertyAddress: String!
  propertyId: Int!
  startDate: String!
  tenantName: String!
}

input UpdatePropertyInput {
  address: String
  amenities: [String!]
  bathrooms: Float
  bedrooms: Int
  city: String
  id: Int!
  image: String
  lastRenovated: Int
  monthlyRent: Float
  occupancyRate: Float
  propertyType: String
  roi: Float
  sqft: Int
  state: String
  status: String
  yearBuilt: Int
  zipCode: String
}

input UpdateTicketInput {
  description: String
  id: Int!
  priority: String
  propertyId: Int
  status: String
  title: String
}

type YearlyProjection {
  amount: Float!
  year: Int!
}